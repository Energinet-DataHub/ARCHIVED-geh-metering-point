# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: WebAPI CD

on:
  push:
    branches:
      - main
      - xtban/gridarea-webapi
    paths:
      - source/**
      - .github/workflows/webapi-cd.yml
      - .github/actions/dotnet-build-and-test/**
  workflow_dispatch: {}

env:
  CSPROJ_FILE_PATH: 'source/Energinet.DataHub.MeteringPoints.EntryPoints.WebAPI/Energinet.DataHub.MeteringPoints.EntryPoints.WebAPI.csproj'
  SOLUTION_FILE_PATH: 'source/Energinet.DataHub.MeteringPoints.sln'
  ORGANISATION_NAME: 'endk'
  AZURE_APP_NAME: 'webapi'
  PROJECT_NAME: meteringpoint
  REPOSITORY_NAME: Energinet-DataHub/geh-metering-point

jobs:
  build_webapi:
    name: Build WebAPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Setup .NET 3.1 environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup .NET 5.0.202 environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'

      - name: Build and test project
        uses: ./.github/actions/dotnet-build-and-test
        with:
          CSPROJ_FILE_PATH: ${{ env.CSPROJ_FILE_PATH }}
          SOLUTION_FILE_PATH: ${{Â env.SOLUTION_FILE_PATH }}
          OUTPUT_PATH: '${{ github.workspace }}/output'

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: drop
          path: '${{ github.workspace }}/output'
    
  deploy_webapi:
    name: Deploy function to ${{ matrix.environment.name }} - ${{ matrix.environment.long }}
    needs: build_webapi
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [
          {
            long: rg-DataHub-MeteringPoint-U,
            short: u,
            name: Development
          },
          # {
          #   long: rg-DataHub-MeteringPoint-T,
          #   short: t,
          #   name: Test
          # },
          # {
          #   long: rg-DataHub-MeteringPoint-B,
          #   short: b,
          #   name: Preprod
          # },
          # {
          #   long: rg-DataHub-MeteringPoint-P,
          #   short: p,
          #   name: Production
          # }
        ]
    environment:
      name: ${{ matrix.environment.long }}
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Setup Azure CLI
        shell: bash
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb
          sudo bash
          az login --service-principal --username ${{ secrets.SPN_ID }} --password ${{ secrets.SPN_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}

      - name: Get function publish profile
        id: get-publish-profile
        run: |
          publish_profile=$(az webapp deployment list-publishing-profiles --name app-${{ env.AZURE_APP_NAME }}-${{ env.PROJECT_NAME }}-${{ env.ORGANISATION_NAME }}-${{ matrix.environment.short }} --resource-group ${{ matrix.environment.long }} --subscription ${{ secrets.SUBSCRIPTION_ID }} --xml)
          echo "::set-output name=publish-profile::${publish_profile}"

      - name: Deploy App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: "app-${{ env.AZURE_APP_NAME }}"
          package: ${{ github.workspace }}/drop
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
