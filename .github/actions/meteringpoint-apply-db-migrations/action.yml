name: 'Applying MeteringPoint db migrations'
description: 'Applies migrations to the MeteringPoint DB (in the shared sql srv) to make sure the DB is up to date.'
inputs:
  sql-server-url:
    description: 'URL for the shared database'
    required: true
  sql-database-name:
    description: 'Name of the MeteringPoint database'
    required: true
  user-keyvaultname:
    description: 'Name of the keyvault secret containing the username for the MeteringPoint sql database'
    required: true
  password-keyvaultname:
    description: 'Name of the keyvault secret containing the password for the MeteringPoint sql database'
    required: true
  keyvault-name:
    description: 'Name of the keyvault to retrieve secrets from'
    required: true
  environment-name:
    description: 'Environment to apply the migrations to'
    required: true

runs:
  using: "composite"
  steps:
    - name: Obtain keyvault information
      run: |
        keyvault_secret_details=$(az keyvault secret show --name "${{ inputs.user-keyvaultname }}" --vault-name ${{ inputs.keyvault-name }})
        meteringpoint_username=$(echo $keyvault_secret_details | python -c "import sys, json; print(json.load(sys.stdin)['value'])")
        echo ::add-mask::$meteringpoint_username
        echo "METERINGPOINT_USERNAME=$meteringpoint_username" >> $GITHUB_ENV
        
        keyvault_secret_details=$(az keyvault secret show --name "${{ inputs.password-keyvaultname }}" --vault-name ${{ inputs.keyvault-name }})
        meteringpoint_password=$(echo $keyvault_secret_details | python -c "import sys, json; print(json.load(sys.stdin)['value'])")
        echo ::add-mask::$meteringpoint_password
        echo "METERINGPOINT_PASSWORD=$meteringpoint_password" >> $GITHUB_ENV
      shell: bash
    - name: Setup variable to use test data in certain environments only
      run: |
        if ${{ inputs.environment-name == 'Development' || inputs.environment-name == 'Test' }}
        then
          echo "INCLUDE_TESTDATA=includeTestData" >> $GITHUB_ENV
        fi
      shell: bash    
    - run: dotnet run --project source/Energinet.DataHub.MeteringPoints.ApplyDBMigrationsApp/ --configuration Release -- "Server=tcp:${{ inputs.sql-server-url }},1433;Initial Catalog=${{ inputs.sql-database-name }};Persist Security Info=False;User ID=${{ env.METERINGPOINT_USERNAME }};Password=${{ env.METERINGPOINT_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" includeSeedData ${{ env.INCLUDE_TESTDATA }}
      shell: bash